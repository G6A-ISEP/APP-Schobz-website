-- MySQL Script generated by MySQL Workbench
-- Tue Dec  8 10:55:29 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Auto école`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Auto école` (
  `id_startup` INT NOT NULL,
  `nom` VARCHAR(100) NOT NULL,
  `logo` BLOB NULL,
  `adresse_postale` VARCHAR(200) NOT NULL,
  `adresse_mail` VARCHAR(100) NOT NULL,
  `numero_de_telephone` INT NOT NULL,
  `Presentation` VARCHAR(300) NULL COMMENT 'J\'hésite encore à mettre le \"non nulle\" pour la présentation. À déterminer si on oblige les auto-écoles à mettre une présentation ou pas.\n',
  PRIMARY KEY (`id_startup`),
  UNIQUE INDEX `nom_UNIQUE` (`id_startup` ASC) VISIBLE,
  UNIQUE INDEX `numéro de téléphone_UNIQUE` (`numero_de_telephone` ASC) VISIBLE,
  UNIQUE INDEX `adresse mail_UNIQUE` (`adresse_mail` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Personne`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Personne` (
  `id_Personne` INT NOT NULL COMMENT 'Tu peux voir qu\'à droite, il y a des cases (en anglais mais je fais confiance en ton niveau d\'anglais) à cocher.\nEt oui, c\'est ça que veulent dire \"PK\" \"NN\" \"UQ\" etc.\n\nid est une clé primaire: on utilise des entiers naturels (int) pour ça. Elle ne doit pas être nulle et elle est unique.\n',
  `role` VARCHAR(100) NOT NULL COMMENT 'role est une chaîne de caractère (j\'ai limité à 45 caractères mais on peut modifier) qui ne doit pas être nulle.\n',
  `nom` VARCHAR(50) NOT NULL COMMENT 'nom est une chaîne de caractère (j\'ai limité à 15 caractères mais on peut modifier) qui ne doit pas être nulle.',
  `prenom` VARCHAR(50) NOT NULL,
  `date_de_naissance` DATE NOT NULL COMMENT 'date de naissance est définie par une date (merci capitaine obvious), elle ne doit juste pas être nulle',
  `adresse_mail` VARCHAR(100) NOT NULL,
  `mot_de_passe` VARCHAR(100) NOT NULL,
  `image` BLOB NULL COMMENT 'BLOB représente une image justemment, alors je laisse la possibilité aux utilisateurs de ne pas mettre d\'image s\'ils le souhaitent.',
  `cle_etrangere_auto_ecole` INT NOT NULL,
  PRIMARY KEY (`id_Personne`, `cle_etrangere_auto_ecole`),
  UNIQUE INDEX `id_Personne_UNIQUE` (`id_Personne` ASC) VISIBLE,
  UNIQUE INDEX `adresse mail_UNIQUE` (`adresse_mail` ASC) VISIBLE,
  INDEX `fk_Personne_Auto école1_idx` (`cle_etrangere_auto_ecole` ASC) VISIBLE,
  CONSTRAINT `fk_Personne_Auto école1`
    FOREIGN KEY (`cle_etrangere_auto_ecole`)
    REFERENCES `mydb`.`Auto école` (`id_startup`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Test`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Test` (
  `id_test` INT NOT NULL,
  `nom_du_test` VARCHAR(100) NOT NULL,
  `periode` TIMESTAMP(50) NOT NULL COMMENT 'Timestamp permet de définir la Date, l\'heure ainsi que le fuseau horaire lors de période définie.\nBien sûre, elle ne doit pas être nulle.\n',
  `cle_etrangere_personne` INT NOT NULL,
  PRIMARY KEY (`id_test`, `cle_etrangere_personne`),
  UNIQUE INDEX `numéro du Test_UNIQUE` (`id_test` ASC) VISIBLE,
  UNIQUE INDEX `nom du test_UNIQUE` (`nom_du_test` ASC) VISIBLE,
  INDEX `fk_Test_Personne1_idx` (`cle_etrangere_personne` ASC) VISIBLE,
  CONSTRAINT `fk_Test_Personne1`
    FOREIGN KEY (`cle_etrangere_personne`)
    REFERENCES `mydb`.`Personne` (`id_Personne`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Capteurs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Capteurs` (
  `id_Capteur` INT NOT NULL,
  `nom du capteur` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_Capteur`),
  UNIQUE INDEX `numéro du Capteur_UNIQUE` (`id_Capteur` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`FAQ Réponse`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`FAQ Réponse` (
  `id_reponse` INT NOT NULL,
  `reponse` VARCHAR(200) NOT NULL COMMENT 'Bien sûr, la réponse est associée à la question qui reste Unique.',
  PRIMARY KEY (`id_reponse`),
  UNIQUE INDEX `numéro de la réponse_UNIQUE` (`id_reponse` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`FAQ Question`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`FAQ Question` (
  `id_question` INT NOT NULL,
  `type de la question` VARCHAR(100) NOT NULL,
  `Question` VARCHAR(200) NOT NULL COMMENT 'Une catégorie peut être dans une question\nMais plusieurs questions peuvent être dans une catégorie, d\'où le choix de l\'Unique dans Question.',
  `cle_etrangere_faq_reponse` INT NOT NULL,
  PRIMARY KEY (`id_question`, `cle_etrangere_faq_reponse`),
  UNIQUE INDEX `numéro de la question_UNIQUE` (`id_question` ASC) VISIBLE,
  INDEX `fk_FAQ Question_FAQ Réponse1_idx` (`cle_etrangere_faq_reponse` ASC) VISIBLE,
  CONSTRAINT `fk_FAQ Question_FAQ Réponse1`
    FOREIGN KEY (`cle_etrangere_faq_reponse`)
    REFERENCES `mydb`.`FAQ Réponse` (`id_reponse`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Résultats`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Résultats` (
  `id_résultats` INT NOT NULL,
  `type` VARCHAR(100) NOT NULL,
  `mesure_de_donnee` DECIMAL(10) ZEROFILL NULL COMMENT 'J\'hésite encore à mettre le \"non null\" dans l\'affichage. À déterminer si on peut laisser des résultats vides.',
  `cle_etrangere_capteur` INT NOT NULL,
  `cle_etrangere_Test` INT NOT NULL,
  PRIMARY KEY (`id_résultats`, `cle_etrangere_capteur`, `cle_etrangere_Test`),
  UNIQUE INDEX `id_résultats_UNIQUE` (`id_résultats` ASC) VISIBLE,
  UNIQUE INDEX `nom du test_UNIQUE` (`type` ASC) VISIBLE,
  INDEX `fk_Résultats_Capteurs_idx` (`cle_etrangere_capteur` ASC) VISIBLE,
  INDEX `fk_Résultats_Test1_idx` (`cle_etrangere_Test` ASC) VISIBLE,
  CONSTRAINT `fk_Résultats_Capteurs`
    FOREIGN KEY (`cle_etrangere_capteur`)
    REFERENCES `mydb`.`Capteurs` (`id_Capteur`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Résultats_Test1`
    FOREIGN KEY (`cle_etrangere_Test`)
    REFERENCES `mydb`.`Test` (`id_test`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
